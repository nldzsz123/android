apply plugin: 'com.android.library'
ext {
    //类库的module名、bintray上项目名、artifactId最好是一致的
    jjdxm_bintrayRepo = 'maven'
    jjdxm_bintrayName = 'jjdxm-ijkplayer'

    jjdxm_packaging = 'aar'
    jjdxm_groupId = 'com.dou361.ijkplayer'
    jjdxm_artifactId = 'jjdxm-ijkplayer'

    jjdxm_libraryVersion = '1.0.5'
    jjdxm_libraryName = 'jjdxm-ijkplayer'
    jjdxm_libraryDescription = 'this is a ijkplayer library of the application'

    jjdxm_siteUrl = 'https://github.com/jjdxmashl/jjdxm_ijkplayer'
    jjdxm_gitUrl = 'https://github.com/jjdxmashl/jjdxm_ijkplayer.git'

    jjdxm_developerId = 'jjdxmashl'
    jjdxm_developerName = 'jjdxmashl'

    jjdxm_licenseName = 'The Apache Software License, Version 2.0'
    jjdxm_licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    jjdxm_allLicenses = ["Apache-2.0"]

    jjdxm_singlePath = 'build/intermediates/classes/release'
    jjdxm_singleJar = jjdxm_artifactId + '-' + jjdxm_libraryVersion + '.jar'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation rootProject.ext.dependencies.ijkplayer
    implementation rootProject.ext.dependencies.appcompatV7
}
