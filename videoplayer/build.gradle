apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.android.targetSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=gnustl_static'
            }
        }

    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes{
        debug{
            jniDebuggable true
            jniDebuggable = true
        }
        release {
        }
    }

    publishNonDefault true
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

//    buildTypes {
//        release {
//            //混淆
//            minifyEnabled false
//            //对齐
//            zipAlignEnabled true
//
//            //移除无用的resource 文件
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.dependencies.appcompatV7
    testImplementation 'junit:junit:4.12'
}
